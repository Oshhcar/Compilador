/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compilador;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Rectangle;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JViewport;
import javax.swing.UIManager;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;

import analizador.*;
import analizador.ast.Ast;
import java.awt.HeadlessException;

/**
 *
 * @author oscar
 */
public class Editor extends javax.swing.JFrame {

    private int pestañas;
    private int nuevoArchivo;
    
    private Lexico lexico;
    private Sintactico sintactico;
    private ArrayList<ErrorC> errores;

    /**
     * Creates new form Editor
     */
    public Editor() {
        initComponents();
        pestañas = 0;
        nuevoArchivo = 0;
        errores = new ArrayList<>();

        this.setLocationRelativeTo(null);
        this.setMinimumSize(new Dimension(900, 600));
        //this.jPanel2.setLayout(new BorderLayout());
        //this.jTabbedPane1.setLayout(new BorderLayout());
        try {

            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");

        } catch (Exception e) {
            // handle exception
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compilador");

        jPanel1.setBackground(java.awt.Color.darkGray);
        jPanel1.setPreferredSize(new java.awt.Dimension(883, 45));

        jButton1.setBackground(java.awt.Color.darkGray);
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new ImageIcon("iconos/archivox32.png"));
        jButton1.setToolTipText("Nuevo");
        jButton1.setAlignmentY(0.0F);
        jButton1.setBorder(null);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setFocusable(false);
        jButton1.setName(""); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(java.awt.Color.darkGray);
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new ImageIcon("iconos/carpetax32.png"));
        jButton2.setToolTipText("Abrir");
        jButton2.setAlignmentY(0.0F);
        jButton2.setBorder(null);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.setFocusable(false);
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(java.awt.Color.darkGray);
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new ImageIcon("iconos/disquetex32.png"));
        jButton3.setToolTipText("Guardar");
        jButton3.setAlignmentY(0.0F);
        jButton3.setBorder(null);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(java.awt.Color.darkGray);
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new ImageIcon("iconos/disco-flexiblex32.png"));
        jButton4.setToolTipText("Guardar como");
        jButton4.setAlignmentY(0.0F);
        jButton4.setBorder(null);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(java.awt.Color.darkGray);
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new ImageIcon("iconos/errorx32.png"));
        jButton5.setToolTipText("Cerrar");
        jButton5.setAlignmentY(0.0F);
        jButton5.setBorder(null);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(java.awt.Color.darkGray);
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setIcon(new ImageIcon("iconos/cerrarx32.png"));
        jButton6.setToolTipText("Cerrar todo");
        jButton6.setAlignmentY(0.0F);
        jButton6.setBorder(null);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(java.awt.Color.darkGray);
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setIcon(new ImageIcon("iconos/compilarx32.png"));
        jButton7.setToolTipText("Compilar");
        jButton7.setAlignmentY(0.0F);
        jButton7.setBorder(null);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton7.setFocusable(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(java.awt.Color.darkGray);
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new ImageIcon("iconos/simbolosx32.png"));
        jButton8.setToolTipText("Debugger");
        jButton8.setAlignmentY(0.0F);
        jButton8.setBorder(null);
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton8.setFocusable(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Salida:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 883, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenuBar1.setBackground(java.awt.Color.white);

        jMenu1.setBackground(java.awt.Color.white);
        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setBackground(java.awt.Color.white);
        jMenuItem1.setIcon(new ImageIcon("iconos/archivo.png"));
        jMenuItem1.setText("Nuevo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setBackground(java.awt.Color.white);
        jMenuItem2.setIcon(new ImageIcon("iconos/carpeta.png"));
        jMenuItem2.setText("Abrir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setBackground(java.awt.Color.white);
        jMenuItem3.setIcon(new ImageIcon("iconos/disquete.png"));
        jMenuItem3.setText("Guardar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setBackground(java.awt.Color.white);
        jMenuItem4.setIcon(new ImageIcon("iconos/disco-flexible.png"));
        jMenuItem4.setText("Guradar como");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setBackground(java.awt.Color.white);
        jMenuItem5.setIcon(new ImageIcon("iconos/error.png"));
        jMenuItem5.setText("Cerrar");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setBackground(java.awt.Color.white);
        jMenuItem6.setIcon(new ImageIcon("iconos/cerrar.png"));
        jMenuItem6.setText("Cerrar todo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Herramientas");

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem7.setBackground(java.awt.Color.white);
        jMenuItem7.setIcon(new ImageIcon("iconos/compilar.png"));
        jMenuItem7.setText("Ejecutar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jRadioButtonMenuItem1.setText("Nombre Archivo");
        jMenu2.add(jRadioButtonMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Reportes");

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setBackground(java.awt.Color.white);
        jMenuItem8.setIcon(new ImageIcon("iconos/errorReporte.png"));
        jMenuItem8.setText("Errores");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setBackground(java.awt.Color.white);
        jMenuItem9.setIcon(new ImageIcon("iconos/simbolos.png"));
        jMenuItem9.setText("Tabla de Símbolos");
        jMenu3.add(jMenuItem9);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setBackground(java.awt.Color.white);
        jMenuItem10.setIcon(new ImageIcon("iconos/algoritmo.png"));
        jMenuItem10.setText("AST");
        jMenu3.add(jMenuItem10);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Ayuda");

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem11.setBackground(java.awt.Color.white);
        jMenuItem11.setIcon(new ImageIcon("iconos/about.png"));
        jMenuItem11.setText("Acerca de");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem11);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        nuevoArchivo++;
        nuevoArchivo();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        abrirArchivo();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        guardarArchivo();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        guardarComo();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        cerrarArchivo(jTabbedPane1.getSelectedIndex());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        cerrarTodo();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        compilarActual();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        reporteErrores();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        abrirArchivo();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        JOptionPane.showMessageDialog(null,
                "Compilador\n\nCredits:\nOscar Morales 201213336\noskralberto14@gmail.com",
                "Acerca de",
                JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        nuevoArchivo++;
        nuevoArchivo();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        guardarArchivo();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        guardarComo();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        cerrarArchivo(jTabbedPane1.getSelectedIndex());
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        cerrarTodo();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        compilarActual();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        if (this.errores.isEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "No se econtraron errores.",
                    "Mensaje de Información",
                    JOptionPane.INFORMATION_MESSAGE);
        } else
            reporteErrores();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    public void reporteErrores() {
        if (!this.errores.isEmpty()) {
            FileWriter archivo;
            PrintWriter pw;

            try {
                archivo = new FileWriter("Errores.html");
                pw = new PrintWriter(archivo);

                pw.println("<!DOCTYPE html PUBLIC \" -//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
                pw.println("<html xmlns=\"http://www.w3.org/1999/xhtml\">");
                pw.println("<head>");
                pw.println("<meta http-equiv=\"Content - Type\" content=\"text / html; charset = utf - 8\" />");
                pw.println("<title>Errores</title>");
                pw.println("<style type=\"text/css\">");
                pw.println("  p { color: white; font-family: Arial; text-align:center; font-size:28px; }");
                pw.println("  h1 {color: white; font-family: Arial; color:#C00; font-size:36px; text-align:center;}");
                pw.println("  h2 {color:#FF0; font-family:Arial; font-size:36px; text-align:center;}");
                pw.println("  table{color:#FFF; font-family:Arial; border-color:#9F3;}");
                pw.println("</style>");
                pw.println("</head>");
                pw.println("<body bgcolor=\"#000000\">");
                pw.println("<h1>Errores</h1>");
                pw.println("</b>");
                pw.println("</b>");
                pw.println("</b>");
                Calendar calendario = new GregorianCalendar();
                int hora, minutos, segundos;
                hora = calendario.get(Calendar.HOUR_OF_DAY);
                minutos = calendario.get(Calendar.MINUTE);
                segundos = calendario.get(Calendar.SECOND);
                pw.println("<h2>Hora: " + hora + ":" + minutos + ":" + segundos + "</h2>");
                int dia, mes, año;
                dia = calendario.get(Calendar.DAY_OF_MONTH);
                mes = calendario.get(Calendar.MONTH);
                año = calendario.get(Calendar.YEAR);
                pw.println("<h2>Fecha: " + dia + "/" + (mes + 1) + "/" + año + "</h2>");
                pw.println("</b>");
                pw.println("</b>");
                pw.println("</b>");
                pw.println("<table align=\"center\" border=\"5\">\n");
                pw.println("<tr>\n<th>Tipo</th>\n<th>Valor</th>\n<th>Linea</th>\n<th>Columna</th>\n<th>Descripcion</th>\n</tr>\n");

                for (ErrorC error : this.errores) {
                    pw.println("<tr>\n");
                    pw.println("<td>" + error.getTipo() + "</td>");
                    pw.println("<td>" + error.getValor() + "</td>");
                    pw.println("<td>" + error.getLinea() + "</td>");
                    pw.println("<td>" + error.getColumna() + "</td>");
                    pw.println("<td> " + error.getDescripcion() + "</td>");
                    pw.println("</tr>\n");
                }

                pw.println("</table>");
                pw.println("</body>");
                pw.println("</html>");
                archivo.close();

                abrirarchivo("Errores.html");

            } catch (IOException e) {
                System.out.println(e + " 1");
            }
        }
    }

    protected Component makeTextPanel(File archivo) {
        //JPanel panel = new JPanel(false);
        JTextArea filler = new JTextArea();
        filler.setTabSize(4);
        filler.setFont(new Font("Arial", Font.PLAIN, 14));

        LineNumberModel lineNumberModel = new LineNumberModel() {
            @Override
            public int getNumberLines() {
                return filler.getLineCount();
            }

            @Override
            public Rectangle getLineRect(int line) {
                try {

                    return filler.modelToView(filler.getLineStartOffset(line));

                } catch (BadLocationException e) {

                    e.printStackTrace();

                    return new Rectangle();

                }
            }
        };

        LineNumberComponent lineNumberComponent = new LineNumberComponent(lineNumberModel);

        lineNumberComponent.setFont(new Font("Arial", Font.PLAIN, 14));

        //filler.setHorizontalAlignment(JLabel.CENTER);
        //panel.setLayout(new GridLayout(1, 1));
        JScrollPane scrollPane = new JScrollPane(filler);
        //scrollPane.add(filler);
        scrollPane.setRowHeaderView(lineNumberComponent);
        lineNumberComponent.setAlignment(LineNumberComponent.CENTER_ALIGNMENT);

        filler.getDocument().addDocumentListener(new DocumentListener() {

            @Override

            public void changedUpdate(DocumentEvent arg0) {

                lineNumberComponent.adjustWidth();

            }

            @Override

            public void insertUpdate(DocumentEvent arg0) {

                lineNumberComponent.adjustWidth();

            }

            @Override

            public void removeUpdate(DocumentEvent arg0) {

                lineNumberComponent.adjustWidth();

            }
        });

        filler.addCaretListener(new CaretListener() {

            public void caretUpdate(CaretEvent e) {

                int pos = e.getDot();

                try {
                    lineNumberComponent.adjustWidth();
                    int row = filler.getLineOfOffset(pos) + 1;

                    int col = pos - filler.getLineStartOffset(row - 1) + 1;

                    jLabel1.setText("Ln:" + row + "  Col:" + col);

                } catch (BadLocationException exc) {

                    System.out.println(exc);

                }

            }

        });

        if (archivo == null) {
            filler.setName("");
            filler.setText("");
        } else {
            FileReader fr = null;
            BufferedReader br = null;

            try {
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);

                String nombre = archivo.getName();
                filler.setName(archivo.getPath());
                filler.setName(nombre);

                String texto = "";
                String linea;
                while ((linea = br.readLine()) != null) {
                    texto += linea + "\n";
                }

                filler.setText(texto);

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (null != fr) {
                        fr.close();
                    }
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            }

        }

        //panel.add(filler);
        lineNumberComponent.adjustWidth();
        return scrollPane;
    }

    private void nuevoArchivo() {
        ImageIcon icon = new ImageIcon("iconos/archivox16.png");
        Component panel2 = makeTextPanel(null);
        panel2.setName("pestaña" + (++pestañas));
        jTabbedPane1.addTab("nuevo " + nuevoArchivo, icon, panel2, "nuevo " + nuevoArchivo);
        jTabbedPane1.setSelectedComponent(panel2);
    }

    private void abrirArchivo() {
        JFileChooser fileChooser = new JFileChooser();
        File f = new File("arbol.png");
        fileChooser.setCurrentDirectory(f);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Coline", "coline", "txt");
        fileChooser.setFileFilter(filter);
        int seleccion = fileChooser.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            int i = jTabbedPane1.getSelectedIndex();
            if (i != -1) {
                leerArchivo(fileChooser);
            } else {
                nuevoArchivo();
                leerArchivo(fileChooser);
                nuevoArchivo++;
            }

        } else {
//            JOptionPane.showMessageDialog(null,
//                "No se ha seleccionado un archivo",
//                "Mensaje de Error",
//                JOptionPane.ERROR_MESSAGE);
        }

    }

    private void leerArchivo(JFileChooser fileChooser) {

        int i = jTabbedPane1.getSelectedIndex();
        JScrollPane scroll = (JScrollPane) jTabbedPane1.getComponent(i);
        JViewport view = (JViewport) scroll.getViewport();
        JTextArea text = (JTextArea) view.getComponent(0);

        if (text.getText().equals("") && text.getName().equals("")) {
            File archivo;
            FileReader fr = null;
            BufferedReader br;

            try {
                archivo = fileChooser.getSelectedFile();
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);

                String nombre = archivo.getName();
                text.setName(archivo.getPath());
                scroll.setName(nombre);

                String texto = "";
                String linea;
                while ((linea = br.readLine()) != null) {
                    texto += linea + "\n";
                }

                text.setText(texto);
                jTabbedPane1.setTitleAt(i, nombre);
                jTabbedPane1.setToolTipTextAt(i, nombre);
                nuevoArchivo--;

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (null != fr) {
                        fr.close();
                    }
                } catch (Exception e2) {
                    e2.printStackTrace();
                    JOptionPane.showMessageDialog(null,
                            "Ocurrió un error al intentar leer el archivo.",
                            "Mensaje de Advertencia",
                            JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            nuevoArchivo();
            leerArchivo(fileChooser);
            nuevoArchivo++;
        }

    }

    private void guardarArchivo() {

        int i = jTabbedPane1.getSelectedIndex();

        if (i != -1) {
            JScrollPane scroll = (JScrollPane) jTabbedPane1.getComponent(i);
            JViewport view = (JViewport) scroll.getViewport();
            JTextArea text = (JTextArea) view.getComponent(0);

            if (!text.getName().equals("")) {
                FileWriter fichero = null;
                PrintWriter pw = null;

                try {
                    fichero = new FileWriter(text.getName());
                    pw = new PrintWriter(fichero);

                    for (String line : text.getText().split("\n")) {
                        pw.println(line);
                    }

                    JOptionPane.showMessageDialog(null,
                            "Se ha guardado el archivo en \n" + text.getName(),
                            "Mensaje Informativo",
                            JOptionPane.INFORMATION_MESSAGE);

                } catch (Exception e) {
                    e.printStackTrace();
                } finally {
                    try {
                        // Nuevamente aprovechamos el finally para 
                        // asegurarnos que se cierra el fichero.
                        if (null != fichero) {
                            fichero.close();
                        }
                    } catch (Exception e2) {
                        e2.printStackTrace();
                        JOptionPane.showMessageDialog(null,
                                "Ocurrió un error al intentar guardar el archivo.",
                                "Mensaje de Advertencia",
                                JOptionPane.WARNING_MESSAGE);
                    }
                }
            } else {
                guardarComo();
            }

        } else {
            JOptionPane.showMessageDialog(null,
                    "No ha abierto un archivo.",
                    "Mensaje de Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void guardarComo() {
        int i = jTabbedPane1.getSelectedIndex();

        if (i != -1) {
            JScrollPane scroll = (JScrollPane) jTabbedPane1.getComponent(i);
            JViewport view = (JViewport) scroll.getViewport();
            JTextArea text = (JTextArea) view.getComponent(0);

            JFileChooser fileChooser = new JFileChooser();
            File f = new File("arbol.png");
            fileChooser.setCurrentDirectory(f);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Coline", "coline", "txt");
            fileChooser.setFileFilter(filter);
            int seleccion = fileChooser.showSaveDialog(this);

            if (seleccion == JFileChooser.APPROVE_OPTION) {

                FileWriter fichero = null;
                PrintWriter pw = null;

                try {
                    fichero = new FileWriter(fileChooser.getSelectedFile());
                    pw = new PrintWriter(fichero);

                    for (String line : text.getText().split("\n")) {
                        pw.println(line);
                    }

                    if (text.getName().equals("")) {
                        nuevoArchivo--;
                    }

                    text.setName(fileChooser.getSelectedFile().getPath());
                    jTabbedPane1.setTitleAt(i, fileChooser.getSelectedFile().getName());
                    jTabbedPane1.setToolTipTextAt(i, fileChooser.getSelectedFile().getName());

                    JOptionPane.showMessageDialog(null,
                            "Se ha guardado el archivo en \n" + text.getName(),
                            "Mensaje Informativo",
                            JOptionPane.INFORMATION_MESSAGE);

                } catch (Exception e) {
                    e.printStackTrace();
                } finally {
                    try {
                        // Nuevamente aprovechamos el finally para 
                        // asegurarnos que se cierra el fichero.
                        if (null != fichero) {
                            fichero.close();
                        }
                    } catch (Exception e2) {
                        e2.printStackTrace();
                        JOptionPane.showMessageDialog(null,
                                "Ocurrió un error al intentar guardar el archivo.",
                                "Mensaje de Advertencia",
                                JOptionPane.WARNING_MESSAGE);
                    }
                }

            }

        } else {
            JOptionPane.showMessageDialog(null,
                    "No ha abierto un archivo.",
                    "Mensaje de Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cerrarArchivo(int i) {

        if (i != -1) {
            JScrollPane scroll = (JScrollPane) jTabbedPane1.getComponent(i);
            JViewport view = (JViewport) scroll.getViewport();
            JTextArea text = (JTextArea) view.getComponent(0);

            if (!text.getText().equals("")) {
                String[] opciones = new String[3];
                opciones[0] = "Si";
                opciones[1] = "No";
                opciones[2] = "Cancelar";

                int seleccion = JOptionPane.showOptionDialog(this,
                        "¿Desea guardar el archivo?",
                        "Guardar",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        opciones, //Títulos de los botones.
                        opciones[0]); //El título del botón por default.

                if (seleccion == JOptionPane.YES_OPTION) {
                    guardarArchivo();
                    jTabbedPane1.remove(i);
                } else if (seleccion == JOptionPane.NO_OPTION) {
                    jTabbedPane1.remove(i);
                }

            } else {
                nuevoArchivo--;
                jTabbedPane1.remove(i);
            }

        } else {
            JOptionPane.showMessageDialog(null,
                    "No ha abierto un archivo.",
                    "Mensaje de Error",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    private void cerrarTodo() {
        int j = jTabbedPane1.getComponentCount();
        for (int y = 0; y < j; y++) {
            cerrarArchivo(jTabbedPane1.getSelectedIndex());
        }

        if (j == 0) {
            JOptionPane.showMessageDialog(null,
                    "No ha abierto un archivo.",
                    "Mensaje de Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void compilarActual() {
        int i = jTabbedPane1.getSelectedIndex();
        if (i != -1) {
            JScrollPane scroll = (JScrollPane) jTabbedPane1.getComponent(i);
            JViewport view = (JViewport) scroll.getViewport();
            JTextArea text = (JTextArea) view.getComponent(0);

            String entrada;
            entrada = text.getText();

            this.errores.clear();

            lexico = new Lexico(new BufferedReader(new StringReader(entrada)));
            sintactico = new Sintactico(lexico);

            Ast ast = null;

            try {
                sintactico.parse();
                ast = sintactico.getAST();
                
                lexico.addError();
                if (!lexico.getErrores().isEmpty()) {
                    this.errores.addAll(lexico.getErrores());
                }

                if (ast != null) {
                    
                    //ast.ejecutar(this.jTextArea1, this.errores);
                    //System.out.println("Genera ast");
                }
            } catch (Exception ex) {
                System.out.println("Exception " + ex);
                JOptionPane.showMessageDialog(null,
                        "El archivo contiene errores.",
                        "Mensaje de Error",
                        JOptionPane.ERROR_MESSAGE);
            }

            if (ast == null || !this.errores.isEmpty()) {
                JOptionPane.showMessageDialog(null,
                        "El archivo contiene errores.",
                        "Mensaje de Error",
                        JOptionPane.ERROR_MESSAGE);
                this.reporteErrores();
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "No se ha seleccionado un archivo",
                    "Mensaje de Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public void abrirarchivo(String archivo) {

        try {

            File objetofile = new File(archivo);
            Desktop.getDesktop().open(objetofile);

        } catch (IOException ex) {
            System.out.println(ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
